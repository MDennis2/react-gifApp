{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE9BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAmBO,OACrCN,EAAc,MAOd,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAaZM,GAbY,4CAAH,sDCaPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKc,UAAU,+CAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,4BAAIA,QCjBHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAqBxC,OAdAC,qBAAY,WAERxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAY,WACRJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAIZ,CAAEpB,IACEqB,EDjByBM,CAAc3B,GAAlCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAGpB,OACI,qCACC,oBAAIJ,UAAU,gDAAd,SAA+DhB,IAC9DoB,GAAW,mBAAGJ,UAAU,wCAAb,qBACb,qBAAKA,UAAU,gDAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEdpB,SAASiB,IAAgB,IAAD,EAEC1C,mBAAS,CAAC,cAFX,mBAE5B2C,EAF4B,KAEhB5C,EAFgB,KAKnC,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CACAA,SAAaA,GACNA,W,MCd3B8B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.7d6dcda9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); \n\n    const handleInputChange = (e)=>{\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n            // console.log('Submit hecho')\n        setCategories(cats=>[inputValue , ...cats]);\n        setInputValue('');\n        }\n        \n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value = {inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}\n","\n\n\nexport const getGifs = async( category )=>{\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)  }&limit=10&api_key=DtklMFTAWVkxyULOUqjsEPPnDlDfbX0u`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map( img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n\n}","// import React from 'react'\n\n// export const GifGridItem = ( props ) => {\n\n//     console.log(props);\n\n//     return (\n//         <div>\n//             <img src ={props.url} alt= {props.title} />\n//             <p>{props.title}</p>\n//         </div>\n//     )\n// }\nimport React from 'react'\n\n\nexport const GifGridItem = ( {title, url} ) => {\n\n\n    return (\n        <div className=\"card animate__animated animate__bounceInLeft\">\n            <img src ={url} alt= {title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} =  useFetchGifs( category );\n\n   \n    return (\n        <> \n         <h3 className=\"card animate__animated animate__bounceInRight\">{category}</h3>\n         {loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\n        <div className=\"card animate__animated animate__bounceInRight\">\n                {\n                    images.map( img =>(\n                        <GifGridItem \n                        key = {img.id}\n                        {...img}\n                        />\n                    ))\n                }\n            \n        </div> \n        </>\n       \n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n\n    });\n\n    useEffect(  () => {\n        \n        getGifs( category )\n            .then( imgs =>{\n                setTimeout( () => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    });\n                }, 1000)\n                \n            })\n\n    }, [ category ])\n    return state; // {data: [], loading: true}\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport default function GifExpertApp() {\n\n    const [categories, setCategories] = useState(['One Punch']);\n    \n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n            \n            <ol>\n                { \n                    categories.map( category => \n                    <GifGrid \n                    category = { category }\n                    key= { category }\n                    />\n                    )                \n                }\n            </ol>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}